%==============================================================================
%Using RDE scheme to predict the EEG signal
%Written by LusionLv
%Guided by Porf.Jun W
%Thanks for Prof. H.F. Ma's help
%Reference % H.F. Ma, S.Y. Leng, K. Aihara, W. Lin, and L.N. Chen, 
%" Randomly distributed embedding making short-term high-dimensional data predictable",
% Proceedings of the National Academy of Sciences of the United States of America, 
% Vol. 115(43) E9994-E10002, Oct 2018. DOI: 10.1073/pnas.1802987115

%==============================================================================
clear all;
Y = xlsread('E:\EEG_Data\20121031083429.txt'); %Y is a 24 Dimension EEG signal
xx = Y(2000+1:end,:)';  

trainlength = 30;
traindata = xx(:,1:trainlength);
dlmwrite('E:\RDE\code\traindata.txt',traindata,'delimiter','\t','newline','pc');

D = size(traindata,1); %D = 24

s = 2000;% the number of non-delay embedding
L = 6; % the value of L is calculated by FNN-cao

prediction = zeros(1,s);
j = 1; %the index of target variable
indexr = zeros(s,D);
score = zeros(1,s);
% making predictions with RDE using KDE schema;

for i=1:s
   indexr(i,:)=randperm(D);
   i
   predictions(i)=myprediction_gp(traindata(indexr(i,1:L),1:trainlength-1),traindata(j,2:trainlength),traindata(indexr(i,1:L),trainlength));% other kinds of fitting method could be used here
end
pp=outlieromit(predictions);% exclude the outliers
[F,XI]=ksdensity(pp,linspace(min(pp),max(pp),10000));% use kernal density estimation to approximate the probability distribution
prediction=sum(XI.*F/sum(F)); % use expectation as the final one-step predicted value 
ystd=std(pp);

% plot the result
figure
plot(xx(j,1:trainlength+1),'-*');% real data
hold on;
plot(trainlength+1,prediction,'ro','MarkerSize',8); %predicted data

figure
plot(XI,F); % probablity distribution generated by RDE framework
hold on
plot(xx(j,trainlength+1),max(F),'bo','MarkerFaceColor','r'); % true value of the target variable
